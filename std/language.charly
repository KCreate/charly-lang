# Call the callback n times
# The callback receives the index
func repeat(times, callback) {
    let i = 0;
    while (i < times) {
        callback(i);
        i = i + 1;
    };
};

# Call the callback end - start times
# Same as repeat, but the first value is start
func range(start, end, callback) {
    let i = start;
    while (i < end) {
        callback(i);
        i = i + 1;
    };
};

# Evaluate and return a string
func eval(string) {
    call_internal("eval", string);
};

# Create a new instance of *ident*
# Passing the constructor all arguments passed after the ident
func new(ident) {
    let arguments = [];
    each(__arguments__, func(arg, i) {
        if (i > 0) {
            arguments = append(arguments, arg);
        };
    });

    call_internal("new", ident, arguments);
};

# Get the current time in miliseconds
func time_ms() {
    call_internal("time_ms");
};
